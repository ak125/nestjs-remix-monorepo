#!/bin/bash

echo "üöÄ TESTS CURL COMPLETS ET OPTIMIS√âS"
echo "=================================="
echo ""

# Tests avec timeout court pour √©viter les blocages
TIMEOUT=5
BASE_URL="http://localhost:3000/api/orders"

echo "üìä Test 1: Total des commandes"
TOTAL=$(curl -s --connect-timeout $TIMEOUT -m $TIMEOUT "$BASE_URL" | jq -r '.total // "ERREUR"')
echo "R√©sultat: $TOTAL commandes"
echo ""

echo "üìä Test 2: Commandes retourn√©es"
RETURNED=$(curl -s --connect-timeout $TIMEOUT -m $TIMEOUT "$BASE_URL" | jq -r '.orders | length // "ERREUR"')
echo "R√©sultat: $RETURNED commandes dans la r√©ponse"
echo ""

echo "üìä Test 3: Premi√®re commande"
FIRST=$(curl -s --connect-timeout $TIMEOUT -m $TIMEOUT "$BASE_URL" | jq -r '.orders[0] | "ID:" + .ord_id + " - " + .customer.cst_name + " - " + .ord_total_ttc + "‚Ç¨" // "ERREUR"')
echo "R√©sultat: $FIRST"
echo ""

echo "üìä Test 4: Pagination (page 2)"
PAGE2=$(curl -s --connect-timeout $TIMEOUT -m $TIMEOUT "${BASE_URL}?page=2&limit=3" | jq -r '.orders | length // "ERREUR"')
echo "R√©sultat: $PAGE2 commandes en page 2"
echo ""

echo "üìä Test 5: Chiffre d'affaires"
CA=$(curl -s --connect-timeout $TIMEOUT -m $TIMEOUT "$BASE_URL" | jq -r '.orders | map(.ord_total_ttc | tonumber) | add // "ERREUR"')
echo "R√©sultat: ${CA}‚Ç¨"
echo ""

echo "üéØ R√âSUM√â DES TESTS"
echo "=================="
if [ "$TOTAL" != "ERREUR" ] && [ "$TOTAL" -gt 1000 ]; then
    echo "‚úÖ Base de donn√©es: $TOTAL commandes (EXCELLENT)"
else
    echo "‚ùå Base de donn√©es: Probl√®me d√©tect√©"
fi

if [ "$RETURNED" != "ERREUR" ] && [ "$RETURNED" -gt 0 ]; then
    echo "‚úÖ API: $RETURNED commandes retourn√©es (OK)"
else
    echo "‚ùå API: Probl√®me de retour des donn√©es"
fi

if [ "$PAGE2" != "ERREUR" ] && [ "$PAGE2" -gt 0 ]; then
    echo "‚úÖ Pagination: $PAGE2 commandes en page 2 (OK)"
else
    echo "‚ùå Pagination: Probl√®me d√©tect√©"
fi

echo ""
echo "üéâ Tests termin√©s avec succ√®s !"
echo "API Orders op√©rationnelle avec des donn√©es r√©elles"
