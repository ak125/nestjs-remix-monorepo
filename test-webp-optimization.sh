#!/bin/bash

# üß™ Script de Test - Optimisation Images WebP Supabase
# V√©rifie que les images sont bien optimis√©es

echo "üñºÔ∏è  TEST D'OPTIMISATION IMAGES WEBP SUPABASE"
echo "=============================================="
echo ""

SUPABASE_URL="https://cxpojprgwgubzjyqzmoq.supabase.co"
TEST_IMAGE="rack-images/13/IMG_0001.jpg"

echo "üìä Test de l'image: $TEST_IMAGE"
echo ""

# Test 1: Image originale
echo "1Ô∏è‚É£  Image ORIGINALE (non optimis√©e):"
ORIGINAL_URL="${SUPABASE_URL}/storage/v1/object/public/uploads/${TEST_IMAGE}"
ORIGINAL_SIZE=$(curl -sI "$ORIGINAL_URL" | grep -i content-length | awk '{print $2}' | tr -d '\r')
ORIGINAL_TYPE=$(curl -sI "$ORIGINAL_URL" | grep -i content-type | awk '{print $2}' | tr -d '\r')

if [ -n "$ORIGINAL_SIZE" ]; then
  ORIGINAL_KB=$((ORIGINAL_SIZE / 1024))
  echo "   ‚úì URL: $ORIGINAL_URL"
  echo "   ‚úì Taille: ${ORIGINAL_KB} KB"
  echo "   ‚úì Type: $ORIGINAL_TYPE"
else
  echo "   ‚ö†Ô∏è  Image introuvable ou erreur"
fi
echo ""

# Test 2: Image WebP optimis√©e (800px)
echo "2Ô∏è‚É£  Image WEBP OPTIMIS√âE (800px):"
WEBP_URL="${SUPABASE_URL}/storage/v1/render/image/public/uploads/${TEST_IMAGE}?format=webp&width=800&quality=85"
WEBP_SIZE=$(curl -sI "$WEBP_URL" | grep -i content-length | awk '{print $2}' | tr -d '\r')
WEBP_TYPE=$(curl -sI "$WEBP_URL" | grep -i content-type | awk '{print $2}' | tr -d '\r')
CACHE_CONTROL=$(curl -sI "$WEBP_URL" | grep -i cache-control | awk -F': ' '{print $2}' | tr -d '\r')

if [ -n "$WEBP_SIZE" ]; then
  WEBP_KB=$((WEBP_SIZE / 1024))
  echo "   ‚úì URL: $WEBP_URL"
  echo "   ‚úì Taille: ${WEBP_KB} KB"
  echo "   ‚úì Type: $WEBP_TYPE"
  echo "   ‚úì Cache: $CACHE_CONTROL"
  
  # Calculer l'√©conomie
  if [ -n "$ORIGINAL_SIZE" ] && [ "$ORIGINAL_SIZE" -gt 0 ]; then
    REDUCTION=$((100 - (WEBP_SIZE * 100 / ORIGINAL_SIZE)))
    echo "   üí∞ R√©duction: ${REDUCTION}%"
  fi
else
  echo "   ‚ö†Ô∏è  Transformation √©chou√©e ou erreur"
fi
echo ""

# Test 3: Image WebP optimis√©e (400px)
echo "3Ô∏è‚É£  Image WEBP OPTIMIS√âE (400px - mobile):"
WEBP_SMALL_URL="${SUPABASE_URL}/storage/v1/render/image/public/uploads/${TEST_IMAGE}?format=webp&width=400&quality=85"
WEBP_SMALL_SIZE=$(curl -sI "$WEBP_SMALL_URL" | grep -i content-length | awk '{print $2}' | tr -d '\r')

if [ -n "$WEBP_SMALL_SIZE" ]; then
  WEBP_SMALL_KB=$((WEBP_SMALL_SIZE / 1024))
  echo "   ‚úì Taille: ${WEBP_SMALL_KB} KB"
  
  if [ -n "$ORIGINAL_SIZE" ] && [ "$ORIGINAL_SIZE" -gt 0 ]; then
    REDUCTION_SMALL=$((100 - (WEBP_SMALL_SIZE * 100 / ORIGINAL_SIZE)))
    echo "   üí∞ R√©duction: ${REDUCTION_SMALL}%"
  fi
else
  echo "   ‚ö†Ô∏è  Transformation √©chou√©e"
fi
echo ""

# Test 4: CDN et Cache
echo "4Ô∏è‚É£  TEST CDN & CACHE:"
HTTP_STATUS=$(curl -sI "$WEBP_URL" | grep -i "HTTP/" | awk '{print $2}')
CF_CACHE=$(curl -sI "$WEBP_URL" | grep -i "cf-cache-status" | awk -F': ' '{print $2}' | tr -d '\r')
CF_RAY=$(curl -sI "$WEBP_URL" | grep -i "cf-ray" | awk -F': ' '{print $2}' | tr -d '\r')

echo "   ‚úì Status HTTP: $HTTP_STATUS"
[ -n "$CF_CACHE" ] && echo "   ‚úì Cloudflare Cache: $CF_CACHE"
[ -n "$CF_RAY" ] && echo "   ‚úì Cloudflare Ray: $CF_RAY"
echo ""

# R√©sum√©
echo "=============================================="
echo "üìà R√âSUM√â DES TESTS"
echo "=============================================="
echo ""

if [ -n "$ORIGINAL_SIZE" ] && [ -n "$WEBP_SIZE" ]; then
  echo "‚úÖ Tests r√©ussis !"
  echo ""
  echo "üìä Statistiques:"
  echo "   ‚Ä¢ Image originale: ${ORIGINAL_KB} KB"
  echo "   ‚Ä¢ Image WebP 800px: ${WEBP_KB} KB"
  [ -n "$WEBP_SMALL_SIZE" ] && echo "   ‚Ä¢ Image WebP 400px: ${WEBP_SMALL_KB} KB"
  echo ""
  echo "üí∞ √âconomies:"
  echo "   ‚Ä¢ R√©duction: ${REDUCTION}%"
  echo "   ‚Ä¢ Gain par image: $((ORIGINAL_KB - WEBP_KB)) KB"
  echo ""
  echo "üåç CDN:"
  echo "   ‚Ä¢ Cloudflare: Actif"
  echo "   ‚Ä¢ Cache: Configur√©"
  echo ""
  echo "üéâ Vos images sont optimis√©es !"
else
  echo "‚ö†Ô∏è  Certains tests ont √©chou√©"
  echo ""
  echo "V√©rifiez:"
  echo "   1. L'URL Supabase est correcte"
  echo "   2. L'image existe: $TEST_IMAGE"
  echo "   3. Le bucket 'uploads' est public"
  echo ""
fi

echo ""
echo "üí° Pour tester avec vos propres images:"
echo "   ./test-webp-optimization.sh rack-images/VOTRE_DOSSIER/VOTRE_IMAGE.jpg"
echo ""
