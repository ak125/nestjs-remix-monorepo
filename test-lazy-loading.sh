#!/bin/bash

# üß™ Script de validation du syst√®me lazy loading
# Teste les performances et fonctionnalit√©s des composants LazyImage et LazyCard

echo "üöÄ Test du syst√®me lazy loading..."
echo "=================================="

# Test 1: V√©rification de la disponibilit√© du serveur
echo "1Ô∏è‚É£ Test disponibilit√© serveur..."
if curl -s http://localhost:3000 >/dev/null; then
    echo "   ‚úÖ Serveur accessible"
else
    echo "   ‚ùå Serveur non accessible"
    exit 1
fi

# Test 2: Test de l'API gammes avec cache
echo "2Ô∏è‚É£ Test API gammes avec cache Redis..."
GAMMES_RESPONSE=$(curl -s http://localhost:3000/api/products/gammes-cached)
GAMMES_COUNT=$(echo "$GAMMES_RESPONSE" | jq 'length' 2>/dev/null || echo "0")

if [ "$GAMMES_COUNT" -gt 100 ]; then
    echo "   ‚úÖ API gammes fonctionnelle ($GAMMES_COUNT gammes)"
else
    echo "   ‚ö†Ô∏è  API gammes retourne peu de donn√©es ($GAMMES_COUNT gammes)"
fi

# Test 3: Test de l'endpoint famille avec gammes
echo "3Ô∏è‚É£ Test API familles avec gammes..."
FAMILIES_RESPONSE=$(curl -s http://localhost:3000/api/catalog/hierarchy/families-with-subcategories)
FAMILIES_COUNT=$(echo "$FAMILIES_RESPONSE" | jq '.data | length' 2>/dev/null || echo "0")

if [ "$FAMILIES_COUNT" -gt 5 ]; then
    echo "   ‚úÖ API familles fonctionnelle ($FAMILIES_COUNT familles)"
else
    echo "   ‚ö†Ô∏è  API familles retourne peu de donn√©es ($FAMILIES_COUNT familles)"
fi

# Test 4: Test d'une page de gamme sp√©cifique
echo "4Ô∏è‚É£ Test page gamme sp√©cifique..."
GAMME_PAGE=$(curl -s -w "%{http_code}" http://localhost:3000/pieces/support-moteur-247.html -o /dev/null)

if [ "$GAMME_PAGE" = "200" ]; then
    echo "   ‚úÖ Page gamme accessible (HTTP $GAMME_PAGE)"
else
    echo "   ‚ùå Page gamme inaccessible (HTTP $GAMME_PAGE)"
fi

# Test 5: V√©rification des composants lazy loading
echo "5Ô∏è‚É£ V√©rification des fichiers lazy loading..."

LAZY_IMAGE_EXISTS=false
LAZY_CARD_EXISTS=false
SKELETON_LOADER_EXISTS=false

if [ -f "/workspaces/nestjs-remix-monorepo/frontend/app/components/ui/LazyImage.tsx" ]; then
    LAZY_IMAGE_EXISTS=true
    echo "   ‚úÖ LazyImage.tsx pr√©sent"
else
    echo "   ‚ùå LazyImage.tsx manquant"
fi

if [ -f "/workspaces/nestjs-remix-monorepo/frontend/app/components/ui/LazyCard.tsx" ]; then
    LAZY_CARD_EXISTS=true
    echo "   ‚úÖ LazyCard.tsx pr√©sent"
else
    echo "   ‚ùå LazyCard.tsx manquant"
fi

if [ -f "/workspaces/nestjs-remix-monorepo/frontend/app/components/ui/SkeletonLoader.tsx" ]; then
    SKELETON_LOADER_EXISTS=true
    echo "   ‚úÖ SkeletonLoader.tsx pr√©sent"
else
    echo "   ‚ùå SkeletonLoader.tsx manquant"
fi

# Test 6: Analyse des performances
echo "6Ô∏è‚É£ Test de performance (temps de r√©ponse)..."

START_TIME=$(date +%s%N)
curl -s http://localhost:3000 > /dev/null
END_TIME=$(date +%s%N)
RESPONSE_TIME=$(( (END_TIME - START_TIME) / 1000000 ))

if [ $RESPONSE_TIME -lt 1000 ]; then
    echo "   ‚úÖ Temps de r√©ponse excellent: ${RESPONSE_TIME}ms"
elif [ $RESPONSE_TIME -lt 3000 ]; then
    echo "   ‚ö†Ô∏è  Temps de r√©ponse acceptable: ${RESPONSE_TIME}ms"
else
    echo "   ‚ùå Temps de r√©ponse lent: ${RESPONSE_TIME}ms"
fi

# R√©sum√©
echo ""
echo "üìä R√âSUM√â DU TEST LAZY LOADING"
echo "================================"

if $LAZY_IMAGE_EXISTS && $LAZY_CARD_EXISTS && $SKELETON_LOADER_EXISTS; then
    echo "‚úÖ Tous les composants lazy loading sont pr√©sents"
else
    echo "‚ùå Certains composants lazy loading manquent"
fi

if [ $RESPONSE_TIME -lt 1000 ] && [ "$GAMMES_COUNT" -gt 100 ]; then
    echo "‚úÖ Performance syst√®me: EXCELLENT"
elif [ $RESPONSE_TIME -lt 3000 ] && [ "$GAMMES_COUNT" -gt 50 ]; then
    echo "‚ö†Ô∏è  Performance syst√®me: ACCEPTABLE"
else
    echo "‚ùå Performance syst√®me: √Ä AM√âLIORER"
fi

echo ""
echo "üéØ Pour tester manuellement:"
echo "   1. Ouvrir http://localhost:3000"
echo "   2. Observer les animations de chargement"
echo "   3. V√©rifier le lazy loading en scrollant"
echo "   4. Tester les URLs de gammes: /pieces/[slug]-[id].html"

echo ""
echo "üîß Composants disponibles:"
echo "   - LazyImage: Chargement progressif des images"
echo "   - LazyCard: Animations d'apparition des cartes"
echo "   - SkeletonLoader: Placeholders de chargement"
echo "   - PerformanceMonitor: Monitoring des performances"