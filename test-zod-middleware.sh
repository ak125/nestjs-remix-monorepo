#!/bin/bash

# üß™ TESTS DE VALIDATION ZOD GLOBALE
# Script pour tester le middleware de validation global

echo "üöÄ Tests du middleware de validation Zod global"
echo "==============================================="

BASE_URL="http://localhost:3000/api/cart"

# Test 1: Erreur de validation d√©taill√©e
echo "üìù Test 1: Validation d√©taill√©e avec erreurs multiples"
echo "------------------------------------------------------"
RESPONSE=$(curl -s -X POST $BASE_URL/items \
  -H "Content-Type: application/json" \
  -d '{
    "product_id": "",
    "quantity": 0,
    "price": -10,
    "name": "",
    "image_url": "invalid-url"
  }')

echo "$RESPONSE" | jq .
STATUS_CODE=$(echo "$RESPONSE" | jq -r '.statusCode // empty')

if [ "$STATUS_CODE" = "400" ]; then
  echo "‚úÖ SUCC√àS: Validation √©chou√©e comme attendu (400)"
  
  # V√©rifier la pr√©sence des d√©tails d'erreur
  HAS_DETAILS=$(echo "$RESPONSE" | jq -r '.details // empty')
  if [ ! -z "$HAS_DETAILS" ]; then
    echo "‚úÖ SUCC√àS: D√©tails d'erreur pr√©sents"
  else
    echo "‚ö†Ô∏è  AVERTISSEMENT: D√©tails d'erreur manquants"
  fi
else
  echo "‚ùå √âCHEC: Code de statut inattendu: $STATUS_CODE"
fi

echo ""

# Test 2: Validation r√©ussie
echo "üìù Test 2: Validation r√©ussie"
echo "-----------------------------"
RESPONSE=$(curl -s -X POST $BASE_URL/items \
  -H "Content-Type: application/json" \
  -d '{
    "product_id": "valid-product-456",
    "quantity": 3,
    "price": 25.99,
    "name": "Produit de test middleware"
  }')

echo "$RESPONSE" | jq .
HAS_ITEMS=$(echo "$RESPONSE" | jq -r '.items // empty')

if [ ! -z "$HAS_ITEMS" ]; then
  echo "‚úÖ SUCC√àS: Article ajout√© avec succ√®s"
else
  echo "‚ùå √âCHEC: √âchec de l'ajout d'article"
fi

echo ""

# Test 3: Validation des param√®tres de mise √† jour
echo "üìù Test 3: Validation des param√®tres de mise √† jour"
echo "---------------------------------------------------"
RESPONSE=$(curl -s -X PUT $BASE_URL/test-item \
  -H "Content-Type: application/json" \
  -d '{
    "quantity": "invalid"
  }')

echo "$RESPONSE" | jq .
STATUS_CODE=$(echo "$RESPONSE" | jq -r '.statusCode // empty')

if [ "$STATUS_CODE" = "400" ]; then
  echo "‚úÖ SUCC√àS: Validation de type √©chou√©e comme attendu"
else
  echo "‚ùå √âCHEC: Validation de type devrait √©chouer"
fi

echo ""

# Test 4: Validation avec quantit√© en limite
echo "üìù Test 4: Validation en limite (quantit√© maximale)"
echo "---------------------------------------------------"
RESPONSE=$(curl -s -X PUT $BASE_URL/test-item \
  -H "Content-Type: application/json" \
  -d '{
    "quantity": 999
  }')

echo "$RESPONSE" | jq .
HAS_SUCCESS=$(echo "$RESPONSE" | jq -r '.message // empty')

if [ ! -z "$HAS_SUCCESS" ]; then
  echo "‚úÖ SUCC√àS: Quantit√© limite accept√©e"
else
  echo "‚ùå √âCHEC: Quantit√© limite rejet√©e √† tort"
fi

echo ""

# Test 5: Validation avec quantit√© hors limite
echo "üìù Test 5: Validation hors limite (quantit√© trop √©lev√©e)"
echo "--------------------------------------------------------"
RESPONSE=$(curl -s -X PUT $BASE_URL/test-item \
  -H "Content-Type: application/json" \
  -d '{
    "quantity": 1000
  }')

echo "$RESPONSE" | jq .
STATUS_CODE=$(echo "$RESPONSE" | jq -r '.statusCode // empty')

if [ "$STATUS_CODE" = "400" ]; then
  echo "‚úÖ SUCC√àS: Quantit√© excessive rejet√©e"
else
  echo "‚ùå √âCHEC: Quantit√© excessive devrait √™tre rejet√©e"
fi

echo ""
echo "üéØ Tests du middleware de validation termin√©s"
echo "============================================="