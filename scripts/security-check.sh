#!/bin/bash

echo "üîí V√©rification de s√©curit√©..."

# V√©rifier les permissions .env
if [ -f backend/.env ]; then
  PERM=$(stat -c "%a" backend/.env)
  if [ "$PERM" != "600" ]; then
    echo "‚ùå ALERTE: .env a des permissions trop ouvertes ($PERM)"
    echo "   Ex√©cutez: chmod 600 backend/.env"
  else
    echo "‚úÖ Permissions .env OK (600)"
  fi
fi

# V√©rifier si .env est dans git
if git ls-files --error-unmatch backend/.env 2>/dev/null; then
  echo "‚ùå CRITIQUE: .env est track√© par Git!"
  echo "   Ex√©cutez: git rm --cached backend/.env"
else
  echo "‚úÖ .env non track√© par Git"
fi

# Rechercher les mots de passe en dur (hors tests)
echo "üîç Recherche de secrets en dur..."
SECRETS=$(grep -r "password.*=.*['\"]" --include="*.ts" --exclude-dir=node_modules --exclude="*test*" --exclude="*spec*" backend/src | grep -v "process.env" | wc -l)

if [ "$SECRETS" -gt 0 ]; then
  echo "‚ö†Ô∏è  $SECRETS mot(s) de passe potentiel(s) trouv√©(s)"
else
  echo "‚úÖ Pas de mots de passe en dur d√©tect√©s"
fi

# V√©rifier que TestHelpers n'est utilis√© qu'en test
TEST_HELPERS_USAGE=$(grep -r "TestHelpers" --include="*.ts" --exclude-dir=node_modules backend/src | grep -v "test-helpers.ts" | wc -l)
if [ "$TEST_HELPERS_USAGE" -gt 0 ]; then
  echo "‚úÖ TestHelpers utilis√© dans $TEST_HELPERS_USAGE fichier(s) (normal)"
else
  echo "‚ö†Ô∏è  TestHelpers non utilis√©"
fi

echo "üîí V√©rification termin√©e"
