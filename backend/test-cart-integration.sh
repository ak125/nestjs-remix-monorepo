#!/bin/bash

# üß™ Script de test int√©gration compl√®te
# Teste toute la cha√Æne: panier ‚Üí promo ‚Üí shipping ‚Üí analytics

BASE_URL="${1:-http://localhost:3000}"
SESSION_COOKIE=""

echo "üß™ Tests d'Int√©gration Compl√®te - Module Panier"
echo "================================================"
echo "Base URL: $BASE_URL"
echo ""

# Couleurs
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Fonction pour extraire le cookie de session
extract_session_cookie() {
    local headers="$1"
    SESSION_COOKIE=$(echo "$headers" | grep -i "set-cookie" | grep "connect.sid" | sed 's/.*connect.sid=\([^;]*\).*/connect.sid=\1/')
}

# Test 1: Cr√©er un panier (ajouter premier produit)
echo -e "${YELLOW}üõí Test 1: Cr√©er un panier (ajouter produit 1001)${NC}"
RESPONSE=$(curl -s -i -X POST "$BASE_URL/api/cart/add" \
  -H "Content-Type: application/json" \
  -d '{
    "product_id": "1001",
    "quantity": 2
  }')

extract_session_cookie "$RESPONSE"
CART=$(echo "$RESPONSE" | grep -A 100 "^{" | jq '.')

if [ -n "$CART" ]; then
    echo -e "${GREEN}‚úÖ Panier cr√©√© avec succ√®s${NC}"
    SUBTOTAL=$(echo "$CART" | jq -r '.subtotal')
    echo "   Sous-total: ${SUBTOTAL}‚Ç¨"
else
    echo -e "${RED}‚ùå √âchec cr√©ation panier${NC}"
    exit 1
fi
echo ""

# Test 2: Ajouter un deuxi√®me produit
echo -e "${YELLOW}üõí Test 2: Ajouter deuxi√®me produit (1002)${NC}"
CART=$(curl -s -X POST "$BASE_URL/api/cart/add" \
  -H "Content-Type: application/json" \
  -H "Cookie: $SESSION_COOKIE" \
  -d '{
    "product_id": "1002",
    "quantity": 1
  }' | jq '.')

ITEM_COUNT=$(echo "$CART" | jq '.items | length')
SUBTOTAL=$(echo "$CART" | jq -r '.subtotal')
echo -e "${GREEN}‚úÖ Produit ajout√©${NC}"
echo "   Nombre de produits: $ITEM_COUNT"
echo "   Sous-total: ${SUBTOTAL}‚Ç¨"
echo ""

# Test 3: V√©rifier le stock (mode UNLIMITED)
echo -e "${YELLOW}üì¶ Test 3: V√©rifier stock produit 1001${NC}"
STOCK=$(curl -s "$BASE_URL/api/products/1001" | jq '.stock')
AVAILABLE=$(echo "$STOCK" | jq -r '.available')
STATUS=$(echo "$STOCK" | jq -r '.status')

echo -e "${GREEN}‚úÖ Stock r√©cup√©r√©${NC}"
echo "   Disponible: $AVAILABLE unit√©s"
echo "   Statut: $STATUS"
echo ""

# Test 4: Appliquer code promo
echo -e "${YELLOW}üè∑Ô∏è  Test 4: Appliquer code promo SUMMER2025${NC}"
CART=$(curl -s -X POST "$BASE_URL/api/cart/promo/apply" \
  -H "Content-Type: application/json" \
  -H "Cookie: $SESSION_COOKIE" \
  -d '{
    "code": "SUMMER2025"
  }' | jq '.')

PROMO_COUNT=$(echo "$CART" | jq '.promos | length')
if [ "$PROMO_COUNT" -gt "0" ]; then
    echo -e "${GREEN}‚úÖ Code promo appliqu√©${NC}"
    PROMO_TYPE=$(echo "$CART" | jq -r '.promos[0].type')
    PROMO_VALUE=$(echo "$CART" | jq -r '.promos[0].value')
    DISCOUNT=$(echo "$CART" | jq -r '.promos[0].discount')
    echo "   Type: $PROMO_TYPE"
    echo "   Valeur: $PROMO_VALUE"
    echo "   R√©duction: ${DISCOUNT}‚Ç¨"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Code promo non appliqu√© (peut-√™tre expir√© ou non valide)${NC}"
fi
echo ""

# Test 5: Calculer frais de livraison
echo -e "${YELLOW}üöö Test 5: Calculer frais de livraison (Paris - IDF)${NC}"
SHIPPING=$(curl -s -X POST "$BASE_URL/api/cart/shipping/calculate" \
  -H "Content-Type: application/json" \
  -H "Cookie: $SESSION_COOKIE" \
  -d '{
    "postalCode": "75001",
    "city": "Paris",
    "country": "FR"
  }' | jq '.')

SHIPPING_COST=$(echo "$SHIPPING" | jq -r '.cost')
FREE_SHIPPING=$(echo "$SHIPPING" | jq -r '.freeShipping')
ZONE=$(echo "$SHIPPING" | jq -r '.zone')

echo -e "${GREEN}‚úÖ Frais de livraison calcul√©s${NC}"
echo "   Zone: $ZONE"
echo "   Co√ªt: ${SHIPPING_COST}‚Ç¨"
echo "   Livraison gratuite: $FREE_SHIPPING"
echo ""

# Test 6: Appliquer la livraison au panier
echo -e "${YELLOW}üöö Test 6: Appliquer livraison au panier${NC}"
CART=$(curl -s -X POST "$BASE_URL/api/cart/shipping/apply" \
  -H "Content-Type: application/json" \
  -H "Cookie: $SESSION_COOKIE" \
  -d '{
    "postalCode": "75001",
    "city": "Paris",
    "country": "FR"
  }' | jq '.')

HAS_SHIPPING=$(echo "$CART" | jq -r '.shipping != null')
SHIPPING_METHOD=$(echo "$CART" | jq -r '.shipping.method // "none"')
FINAL_TOTAL=$(echo "$CART" | jq -r '.total')

if [ "$HAS_SHIPPING" = "true" ]; then
    echo -e "${GREEN}‚úÖ Livraison appliqu√©e${NC}"
    echo "   M√©thode: $SHIPPING_METHOD"
    echo "   Total final: ${FINAL_TOTAL}‚Ç¨"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Livraison non appliqu√©e${NC}"
fi
echo ""

# Test 7: R√©capitulatif complet du panier
echo -e "${YELLOW}üìã Test 7: R√©capitulatif complet du panier${NC}"
CART=$(curl -s -X GET "$BASE_URL/api/cart" \
  -H "Cookie: $SESSION_COOKIE" | jq '.')

echo "$CART" | jq '{
  items: .items | length,
  subtotal: .subtotal,
  promos: .promos | length,
  shipping: .shipping.method,
  total: .total
}'

echo -e "${BLUE}üìä D√©tails du panier:${NC}"
echo "   Produits: $(echo "$CART" | jq '.items | length')"
echo "   Sous-total: $(echo "$CART" | jq -r '.subtotal')‚Ç¨"
echo "   Codes promo: $(echo "$CART" | jq '.promos | length')"
echo "   Livraison: $(echo "$CART" | jq -r '.shipping.cost // 0')‚Ç¨"
echo "   Total TTC: $(echo "$CART" | jq -r '.total')‚Ç¨"
echo ""

# Test 8: V√©rifier analytics (√©tat initial)
echo -e "${YELLOW}üìä Test 8: V√©rifier √©tat analytics${NC}"
ANALYTICS=$(curl -s "$BASE_URL/api/cart/analytics/abandonment" | jq '.')

CREATED=$(echo "$ANALYTICS" | jq -r '.stats.created')
CONVERTED=$(echo "$ANALYTICS" | jq -r '.stats.converted')
ABANDONED=$(echo "$ANALYTICS" | jq -r '.stats.abandoned')

echo -e "${BLUE}üìà √âtat analytics:${NC}"
echo "   Paniers cr√©√©s: $CREATED"
echo "   Convertis: $CONVERTED"
echo "   Abandonn√©s: $ABANDONED"
echo ""

# Test 9: Modifier quantit√©
echo -e "${YELLOW}üîß Test 9: Modifier quantit√© produit 1001 (2 ‚Üí 3)${NC}"
CART=$(curl -s -X PUT "$BASE_URL/api/cart/update" \
  -H "Content-Type: application/json" \
  -H "Cookie: $SESSION_COOKIE" \
  -d '{
    "product_id": "1001",
    "quantity": 3
  }' | jq '.')

NEW_QTY=$(echo "$CART" | jq '.items[] | select(.product_id == "1001") | .quantity')
echo -e "${GREEN}‚úÖ Quantit√© modifi√©e${NC}"
echo "   Nouvelle quantit√©: $NEW_QTY"
echo ""

# Test 10: Supprimer un produit
echo -e "${YELLOW}üóëÔ∏è  Test 10: Supprimer produit 1002${NC}"
CART=$(curl -s -X DELETE "$BASE_URL/api/cart/remove/1002" \
  -H "Cookie: $SESSION_COOKIE" | jq '.')

REMAINING_ITEMS=$(echo "$CART" | jq '.items | length')
echo -e "${GREEN}‚úÖ Produit supprim√©${NC}"
echo "   Produits restants: $REMAINING_ITEMS"
echo ""

# Test 11: Retirer code promo
if [ "$PROMO_COUNT" -gt "0" ]; then
    echo -e "${YELLOW}üè∑Ô∏è  Test 11: Retirer code promo${NC}"
    CART=$(curl -s -X DELETE "$BASE_URL/api/cart/promo/remove/SUMMER2025" \
      -H "Cookie: $SESSION_COOKIE" | jq '.')
    
    PROMO_COUNT_AFTER=$(echo "$CART" | jq '.promos | length')
    echo -e "${GREEN}‚úÖ Code promo retir√©${NC}"
    echo "   Codes promo restants: $PROMO_COUNT_AFTER"
    echo ""
fi

# Test 12: Vider le panier
echo -e "${YELLOW}üóëÔ∏è  Test 12: Vider le panier${NC}"
RESULT=$(curl -s -X DELETE "$BASE_URL/api/cart/clear" \
  -H "Cookie: $SESSION_COOKIE" | jq '.')

SUCCESS=$(echo "$RESULT" | jq -r '.success')
if [ "$SUCCESS" = "true" ]; then
    echo -e "${GREEN}‚úÖ Panier vid√©${NC}"
else
    echo -e "${RED}‚ùå √âchec vidage panier${NC}"
fi
echo ""

# R√©sum√© final
echo "================================================"
echo -e "${GREEN}‚úÖ Tests d'int√©gration termin√©s${NC}"
echo ""

echo -e "${BLUE}üìä R√©sum√© des fonctionnalit√©s test√©es:${NC}"
echo "  ‚úÖ Cr√©ation et gestion panier"
echo "  ‚úÖ Ajout/modification/suppression produits"
echo "  ‚úÖ Validation stock (mode flux tendu)"
echo "  ‚úÖ Application codes promo"
echo "  ‚úÖ Calcul frais de livraison"
echo "  ‚úÖ Application livraison au panier"
echo "  ‚úÖ R√©cup√©ration analytics"
echo "  ‚úÖ Vidage panier"
echo ""

echo "üîó Endpoints test√©s:"
echo "   POST   $BASE_URL/api/cart/add"
echo "   GET    $BASE_URL/api/cart"
echo "   PUT    $BASE_URL/api/cart/update"
echo "   DELETE $BASE_URL/api/cart/remove/:id"
echo "   DELETE $BASE_URL/api/cart/clear"
echo "   POST   $BASE_URL/api/cart/promo/apply"
echo "   DELETE $BASE_URL/api/cart/promo/remove/:code"
echo "   POST   $BASE_URL/api/cart/shipping/calculate"
echo "   POST   $BASE_URL/api/cart/shipping/apply"
echo "   GET    $BASE_URL/api/products/:id"
echo "   GET    $BASE_URL/api/cart/analytics/abandonment"
echo ""

echo "üí° Note: Ce script teste l'int√©gration compl√®te de toutes"
echo "   les fonctionnalit√©s du module panier en une seule session"
echo ""
