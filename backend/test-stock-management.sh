#!/bin/bash

# üß™ Script de test du syst√®me de gestion de stock
# Mode UNLIMITED (flux tendu) et TRACKED (suivi r√©el)

BASE_URL="${1:-http://localhost:3000}"

echo "üß™ Tests du Syst√®me de Gestion de Stock"
echo "========================================"
echo "Base URL: $BASE_URL"
echo ""

# Couleurs
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Test 1: V√©rifier le stock d'un produit
echo -e "${YELLOW}üì¶ Test 1: V√©rifier le stock d'un produit${NC}"
echo "GET $BASE_URL/api/products/1001"
STOCK=$(curl -s "$BASE_URL/api/products/1001" | jq '.stock')
echo "$STOCK" | jq '.'
echo ""

# D√©terminer le mode bas√© sur le stock disponible
AVAILABLE=$(echo "$STOCK" | jq -r '.available')
if [ "$AVAILABLE" == "999" ]; then
    MODE="UNLIMITED"
    echo -e "${GREEN}‚úÖ Mode d√©tect√©: FLUX TENDU (UNLIMITED)${NC}"
else
    MODE="TRACKED"
    echo -e "${GREEN}‚úÖ Mode d√©tect√©: SUIVI R√âEL (TRACKED)${NC}"
fi
echo ""

# Test 2: Liste de r√©approvisionnement
echo -e "${YELLOW}üìã Test 2: Liste de r√©approvisionnement${NC}"
echo "GET $BASE_URL/api/products/inventory/reorder-list"
REORDER=$(curl -s "$BASE_URL/api/products/inventory/reorder-list")
echo "$REORDER" | jq '{success, count}'
REORDER_COUNT=$(echo "$REORDER" | jq -r '.count')
if [ "$REORDER_COUNT" == "0" ]; then
    echo -e "${GREEN}‚úÖ Aucun produit n√©cessitant un r√©approvisionnement${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  $REORDER_COUNT produit(s) n√©cessitent un r√©approvisionnement${NC}"
    echo "$REORDER" | jq '.items[0:3]' # Afficher les 3 premiers
fi
echo ""

# Test 3: Rapport d'inventaire
echo -e "${YELLOW}üìä Test 3: Rapport d'inventaire global${NC}"
echo "GET $BASE_URL/api/products/inventory/report"
REPORT=$(curl -s "$BASE_URL/api/products/inventory/report" | jq '.report')
echo "$REPORT" | jq '.'
echo ""

# Test 4: Ajout au panier avec quantit√© normale
SESSION="test-stock-$(date +%s)"
echo -e "${YELLOW}üõí Test 4: Ajout au panier - Quantit√© normale (10 unit√©s)${NC}"
echo "POST $BASE_URL/api/cart/items"
ADD_NORMAL=$(curl -s -H "Cookie: userSession=$SESSION" \
  -H "Content-Type: application/json" \
  -X POST "$BASE_URL/api/cart/items" \
  -d '{"productId": 1001, "quantity": 10}')
SUCCESS=$(echo "$ADD_NORMAL" | jq -r '.success // false')
if [ "$SUCCESS" == "true" ]; then
    echo -e "${GREEN}‚úÖ Ajout r√©ussi: 10 unit√©s${NC}"
else
    echo -e "${RED}‚ùå √âchec de l'ajout${NC}"
    echo "$ADD_NORMAL" | jq '.'
fi
echo ""

# Test 5: Ajout au panier avec grande quantit√©
SESSION2="test-stock-large-$(date +%s)"
LARGE_QTY=500
echo -e "${YELLOW}üõí Test 5: Ajout au panier - Grande quantit√© ($LARGE_QTY unit√©s)${NC}"
echo "POST $BASE_URL/api/cart/items"
ADD_LARGE=$(curl -s -H "Cookie: userSession=$SESSION2" \
  -H "Content-Type: application/json" \
  -X POST "$BASE_URL/api/cart/items" \
  -d "{\"productId\": 1001, \"quantity\": $LARGE_QTY}")
SUCCESS_LARGE=$(echo "$ADD_LARGE" | jq -r '.success // false')
if [ "$SUCCESS_LARGE" == "true" ]; then
    echo -e "${GREEN}‚úÖ Ajout r√©ussi: $LARGE_QTY unit√©s (mode $MODE permet les grandes quantit√©s)${NC}"
else
    MESSAGE=$(echo "$ADD_LARGE" | jq -r '.message')
    echo -e "${YELLOW}‚ö†Ô∏è  Ajout refus√©: $MESSAGE${NC}"
    echo "   (Normal en mode TRACKED si stock insuffisant)"
fi
echo ""

# Test 6: Ajout au panier avec quantit√© excessive
if [ "$MODE" == "TRACKED" ]; then
    SESSION3="test-stock-excessive-$(date +%s)"
    EXCESSIVE_QTY=10000
    echo -e "${YELLOW}üõí Test 6: Ajout au panier - Quantit√© excessive ($EXCESSIVE_QTY unit√©s)${NC}"
    echo "POST $BASE_URL/api/cart/items"
    ADD_EXCESSIVE=$(curl -s -H "Cookie: userSession=$SESSION3" \
      -H "Content-Type: application/json" \
      -X POST "$BASE_URL/api/cart/items" \
      -d "{\"productId\": 1001, \"quantity\": $EXCESSIVE_QTY}")
    SUCCESS_EXCESSIVE=$(echo "$ADD_EXCESSIVE" | jq -r '.success // false')
    if [ "$SUCCESS_EXCESSIVE" == "false" ]; then
        MESSAGE=$(echo "$ADD_EXCESSIVE" | jq -r '.message')
        echo -e "${GREEN}‚úÖ Validation correcte: $MESSAGE${NC}"
    else
        echo -e "${RED}‚ùå ERREUR: La validation du stock n'a pas fonctionn√©!${NC}"
    fi
    echo ""
fi

# R√©sum√©
echo "========================================"
echo -e "${GREEN}‚úÖ Tests termin√©s${NC}"
echo ""
echo "üìä R√©sum√©:"
echo "  - Mode de stock: $MODE"
echo "  - Stock produit 1001: $AVAILABLE unit√©s"
echo "  - Produits √† r√©approvisionner: $REORDER_COUNT"
echo ""

if [ "$MODE" == "UNLIMITED" ]; then
    echo -e "${GREEN}üí° Mode FLUX TENDU actif${NC}"
    echo "   ‚úÖ Pas de limite de quantit√©"
    echo "   ‚úÖ Commandes accept√©es sans contrainte"
    echo "   ‚úÖ R√©approvisionnement g√©r√© √† la demande"
    echo ""
    echo "üìù Pour passer en mode SUIVI R√âEL:"
    echo "   1. Ajouter STOCK_MODE=TRACKED dans .env"
    echo "   2. Red√©marrer le serveur"
else
    echo -e "${YELLOW}üìä Mode SUIVI R√âEL actif${NC}"
    echo "   ‚úÖ Validation du stock en temps r√©el"
    echo "   ‚úÖ Alertes de r√©approvisionnement"
    echo "   ‚úÖ Rapports d'inventaire d√©taill√©s"
    echo ""
    if [ "$REORDER_COUNT" != "0" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  Actions recommand√©es:${NC}"
        echo "   - Consulter la liste de r√©approvisionnement"
        echo "   - Passer commande aux fournisseurs"
        echo "   - Mettre √† jour le stock apr√®s r√©ception"
    fi
fi

echo ""
echo "üîó Endpoints utiles:"
echo "   GET  $BASE_URL/api/products/:id                    (stock produit)"
echo "   GET  $BASE_URL/api/products/inventory/reorder-list  (liste r√©appro)"
echo "   GET  $BASE_URL/api/products/inventory/report        (rapport inventaire)"
echo "   POST $BASE_URL/api/products/inventory/restock/:id   (simuler r√©appro)"
echo ""
