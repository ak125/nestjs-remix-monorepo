/**
 * üéØ MODULE PRODUCTS OPTIMAL - Architecture sans d√©pendances circulaires
 *
 * Module products avec strat√©gie optimale :
 * ‚úÖ Pas d'imports de ConfigModule ou DatabaseModule
 * ‚úÖ ProductsService h√©rite de SupabaseBaseService
 * ‚úÖ Configuration via getAppConfig() en fallback
 * ‚úÖ √âvite toute d√©pendance circulaire
 * ‚úÖ Service l√©ger et performant
 * ‚úÖ Support du cache Redis pour les performances
 */

import { Module } from '@nestjs/common';
import { CacheModule } from '@nestjs/cache-manager';

// Controllers
import { ProductsController } from './products.controller';

// Services
import { ProductsService } from './products.service';
import { ProductsEnhancementService } from './services/products-enhancement.service';

@Module({
  imports: [
    // Cache Redis pour am√©liorer les performances
    CacheModule.register({
      ttl: 300, // 5 minutes par d√©faut
      max: 1000, // 1000 entr√©es max en cache
    }),
  ],
  controllers: [
    ProductsController, // ‚úÖ API REST pour la gestion des produits
  ],
  providers: [
    ProductsService, // ‚úÖ Service principal de gestion des produits
    ProductsEnhancementService, // ‚úÖ Service d'am√©lioration avec r√®gles m√©tier avanc√©es
  ],
  exports: [
    ProductsService, // ‚úÖ Export√© pour utilisation dans d'autres modules
    ProductsEnhancementService, // ‚úÖ Service d'am√©lioration export√©
  ],
})
export class ProductsModule {}
