/**
 * üéØ MODULE USERS COMPLET - Architecture finale consolid√©e
 *
 * Module users unifi√© int√©grant toutes les fonctionnalit√©s :
 * ‚úÖ Gestion utilisateurs compl√®te (CRUD, profils)
 * ‚úÖ Adresses facturation/livraison (CRUD)
 * ‚úÖ Gestion des mots de passe s√©curis√©e
 * ‚úÖ Messagerie interne avec threading
 * ‚úÖ Int√©gration avec l'authentification JWT
 * ‚úÖ RGPD/Suppression compte
 * ‚úÖ Sessions JWT + Redis cache
 */

import { Module } from '@nestjs/common';
import { JwtModule } from '@nestjs/jwt';
import { ConfigModule } from '@nestjs/config';
import { DatabaseModule } from '../../database/database.module';
import { CacheModule } from '../../cache/cache.module';
import { MailService } from '../../services/mail.service';

// Controllers disponibles
import { UsersController } from './users.controller';
import { PasswordController } from './controllers/password.controller';
import { AddressesController } from './controllers/addresses.controller';
// import { AddressesSimpleController } from './controllers/addresses-simple.controller';
// import { UserAddressController } from './controllers/user-address.controller';

// Services m√©tier sp√©cialis√©s
import { UsersService } from './users.service';
import { UsersExtendedService } from './services/users-extended.service';
import { PasswordService } from './services/password.service';
import { AddressesService } from './services/addresses.service';
// Services modernes en cours de migration (this.db -> this.client)
// import { AddressModernService } from './services/address-modern.service';
// import { MessageModernService } from './services/message-modern.service';

@Module({
  imports: [
    // Modules externes - Configuration et infrastructure
    ConfigModule, // ‚úÖ Configuration pour SupabaseBaseService
    DatabaseModule, // ‚úÖ UserDataService et autres services de donn√©es
    CacheModule, // ‚úÖ Redis cache pour sessions et performances
    JwtModule.register({
      secret: process.env.JWT_SECRET || 'secret-key',
      signOptions: { expiresIn: '7d' },
    }),
  ],
  controllers: [
    // Controllers principaux
    UsersController,
    PasswordController, // ‚úÖ API REST pour gestion des mots de passe
    AddressesController, // ‚úÖ Service d'adresses r√©activ√©
    // AddressesTestController, // ‚úÖ Test contr√¥leur adresses - validation architecture (temporairement d√©sactiv√©)
    // UserAddressController temporairement d√©sactiv√© - incompatibilit√© des m√©thodes
  ],
  providers: [
    // Services existants modernis√©s
    UsersService,
    UsersExtendedService,
    PasswordService, // ‚úÖ Service moderne de gestion des mots de passe
    AddressesService, // ‚úÖ Service moderne de gestion des adresses

    // Services modernes sp√©cialis√©s (temporairement d√©sactiv√©s - migration this.db vers this.client)
    // TODO: Migrer AddressModernService, MessageModernService
    // AddressModernService,
    // MessageModernService,

    // Service mail avec token d'injection
    {
      provide: 'MailService',
      useClass: MailService,
    },
  ],
  exports: [
    // Services pour autres modules
    UsersService,
    UsersExtendedService,
    PasswordService, // ‚úÖ Service de mots de passe export√©
    AddressesService, // ‚úÖ Service d'adresses export√©
    // Services modernes temporairement d√©sactiv√©s
    // AddressModernService,
    // MessageModernService,
  ],
})
export class UsersModule {}
