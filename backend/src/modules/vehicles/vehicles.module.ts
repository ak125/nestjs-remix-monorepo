/**
 * ðŸš— MODULE VEHICLES OPTIMAL - Architecture alignÃ©e sur ProductsModule
 *
 * Module vÃ©hicules avec stratÃ©gie optimale :
 * âœ… Pas d'imports de ConfigModule ou DatabaseModule
 * âœ… VehiclesService hÃ©rite de SupabaseBaseService
 * âœ… Configuration via getAppConfig() en fallback
 * âœ… Ã‰vite toute dÃ©pendance circulaire
 * âœ… Service lÃ©ger et performant pour automobiles
 */

import { Module } from '@nestjs/common';
import { ConfigModule } from '@nestjs/config';
import { CacheModule } from '@nestjs/cache-manager';

// Controllers
import { VehiclesController } from './vehicles.controller';
import { VehiclesFormsController } from './vehicles-forms-simple.controller';
import { EnhancedVehicleController } from '../catalog/controllers/enhanced-vehicle.controller';

// Services
import { VehiclesService } from './vehicles.service';
import { EnhancedVehicleService } from '../catalog/services/enhanced-vehicle.service';

@Module({
  imports: [
    ConfigModule, // âœ… Ajout du ConfigModule pour injection ConfigService
    CacheModule.register({
      ttl: 300, // 5 minutes
      max: 100, // max 100 items in cache
    }),
  ],
  controllers: [
    EnhancedVehicleController, // ðŸš€ PRIORITÃ‰: API Enhanced pour service optimisÃ©
    VehiclesController, // âœ… API REST pour la gestion des vÃ©hicules (fallback)
    VehiclesFormsController, // âœ… API Forms pour remplacer _form.get.car.*.php
  ],
  providers: [
    VehiclesService, // âœ… Service principal de gestion des vÃ©hicules
    EnhancedVehicleService, // âœ… Service optimisÃ© combinant proposÃ© + existant
  ],
  exports: [
    VehiclesService, // âœ… ExportÃ© pour utilisation dans d'autres modules
    EnhancedVehicleService, // âœ… Service optimisÃ© exportÃ©
  ],
})
export class VehiclesModule {}
