#!/bin/bash

# =============================================================================
# üß™ TESTS COMPLETS DU SYST√àME
# =============================================================================

echo "üß™ Tests complets du syst√®me NestJS + Remix"
echo "==========================================="

BASE_URL="http://localhost:3000"
SESSION_FILE="/tmp/complete_session.txt"
RESET_TOKEN=""

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

function print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

function print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

function print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"
}

function print_info() {
    echo -e "${YELLOW}‚ÑπÔ∏è $1${NC}"
}

function test_endpoint() {
    local method=$1
    local endpoint=$2
    local data=$3
    local expected_status=$4
    local description=$5
    
    echo ""
    print_info "Test: $description"
    echo "Method: $method | Endpoint: $endpoint"
    
    if [ "$method" = "POST" ] && [ ! -z "$data" ]; then
        response=$(curl -s -w "HTTPSTATUS:%{http_code}" \
            -X $method \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "$data" \
            -b $SESSION_FILE \
            -c $SESSION_FILE \
            $BASE_URL$endpoint)
    elif [ "$method" = "GET" ]; then
        response=$(curl -s -w "HTTPSTATUS:%{http_code}" \
            -X $method \
            -b $SESSION_FILE \
            $BASE_URL$endpoint)
    else
        response=$(curl -s -w "HTTPSTATUS:%{http_code}" \
            -X $method \
            -b $SESSION_FILE \
            $BASE_URL$endpoint)
    fi
    
    # Extraire le code de statut
    http_code=$(echo $response | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
    body=$(echo $response | sed -e 's/HTTPSTATUS\:.*//g')
    
    # V√©rifier le code de statut
    if [ "$http_code" -eq "$expected_status" ]; then
        print_success "Status: $http_code (attendu: $expected_status)"
    else
        print_error "Status: $http_code (attendu: $expected_status)"
    fi
    
    # Afficher le corps de la r√©ponse si n√©cessaire
    if [ ! -z "$body" ] && [ "$body" != "null" ]; then
        echo "Response: $body"
    fi
    
    return $http_code
}

# =============================================================================
# D√âBUT DES TESTS
# =============================================================================

echo ""
echo "üöÄ D√©marrage des tests complets..."

# Test 1: Page d'accueil
test_endpoint "GET" "/" "" 200 "Acc√®s √† la page d'accueil"

# Test 2: Inscription d'un nouvel utilisateur
test_endpoint "POST" "/auth/register" "email=testuser@example.com&password=Test123456&firstName=Test&lastName=User" 302 "Inscription d'un nouvel utilisateur"

# Test 3: Connexion avec le compte cr√©√©
test_endpoint "POST" "/auth/login" "email=testuser@example.com&password=Test123456" 302 "Connexion avec le compte cr√©√©"

# Test 4: Acc√®s au profil utilisateur
test_endpoint "GET" "/profile" "" 200 "Acc√®s au profil utilisateur"

# Test 5: Mise √† jour du profil
test_endpoint "POST" "/profile/update" "firstName=TestModified&lastName=UserModified&email=testuser@example.com" 200 "Mise √† jour du profil"

# Test 6: Demande de r√©initialisation de mot de passe
test_endpoint "POST" "/auth/forgot-password" "email=testuser@example.com" 200 "Demande de r√©initialisation de mot de passe"

# Test 7: Changement de mot de passe
test_endpoint "POST" "/profile/change-password" "currentPassword=Test123456&newPassword=NewPassword123&confirmPassword=NewPassword123" 200 "Changement de mot de passe"

# Test 8: D√©connexion
test_endpoint "POST" "/auth/logout" "" 302 "D√©connexion"

# Test 9: V√©rification que l'acc√®s au profil est bloqu√© apr√®s d√©connexion
test_endpoint "GET" "/profile" "" 302 "V√©rification de la d√©connexion"

# Test 10: Reconnexion avec nouveau mot de passe
test_endpoint "POST" "/auth/login" "email=testuser@example.com&password=NewPassword123" 302 "Reconnexion avec nouveau mot de passe"

# Test 11: Tests d'erreur - Connexion avec mot de passe incorrect
test_endpoint "POST" "/auth/login" "email=testuser@example.com&password=wrongpassword" 401 "Connexion avec mot de passe incorrect"

# Test 12: Tests d'erreur - Inscription avec email d√©j√† utilis√©
test_endpoint "POST" "/auth/register" "email=testuser@example.com&password=Test123456&firstName=Test&lastName=User" 400 "Inscription avec email d√©j√† utilis√©"

# Test 13: Tests d'erreur - Acc√®s √† un token de r√©initialisation invalide
test_endpoint "GET" "/auth/reset-password/invalid-token" "" 400 "Token de r√©initialisation invalide"

# Test 14: Tests d'erreur - Changement de mot de passe avec mot de passe actuel incorrect
test_endpoint "POST" "/auth/login" "email=testuser@example.com&password=NewPassword123" 302 "Reconnexion pour test changement mot de passe"
test_endpoint "POST" "/profile/change-password" "currentPassword=wrongpassword&newPassword=AnotherPassword123&confirmPassword=AnotherPassword123" 400 "Changement de mot de passe avec mot de passe actuel incorrect"

# Test 15: Tests d'erreur - Changement de mot de passe avec confirmation incorrecte
test_endpoint "POST" "/profile/change-password" "currentPassword=NewPassword123&newPassword=AnotherPassword123&confirmPassword=DifferentPassword123" 400 "Changement de mot de passe avec confirmation incorrecte"

# =============================================================================
# R√âSUM√â DES TESTS
# =============================================================================

echo ""
echo "üìä R√©sum√© des tests"
echo "==================="
echo "‚úÖ Tests d'authentification: inscription, connexion, d√©connexion"
echo "‚úÖ Tests de gestion du profil: affichage, mise √† jour, changement de mot de passe"
echo "‚úÖ Tests de r√©initialisation de mot de passe: demande de r√©initialisation"
echo "‚úÖ Tests d'erreur: gestion des cas d'erreur"
echo "‚úÖ Tests de s√©curit√©: v√©rification des autorisations"

echo ""
print_success "Tous les tests ont √©t√© ex√©cut√©s!"
print_info "V√©rifiez les r√©sultats ci-dessus pour identifier d'√©ventuels probl√®mes"

# Nettoyer
rm -f $SESSION_FILE
