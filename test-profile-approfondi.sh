#!/bin/bash

echo "üîç TEST APPROFONDI DU PROBL√àME POST PROFILE"
echo "==========================================="
echo "Date: $(date)"
echo "Objectif: Confirmer d√©finitivement le statut des actions POST Profile"
echo ""

# Nettoyer les fichiers temporaires
rm -f /tmp/cookies.txt /tmp/profile_*.txt

echo "üìã √âTAPE 1: Configuration initiale"
echo "=================================="
echo "üîß Nettoyage des cookies..."
echo "üîß Pr√©paration des tests..."
echo ""

echo "üìã √âTAPE 2: Connexion utilisateur"
echo "================================="
echo "üîê Connexion avec test2@example.com..."

LOGIN_RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" -X POST http://localhost:3000/auth/login \
  -d "email=test2@example.com&password=test123" \
  -H "Content-Type: application/x-www-form-urlencoded" \
  --cookie-jar /tmp/cookies.txt)

LOGIN_STATUS=$(echo $LOGIN_RESPONSE | grep -o "HTTPSTATUS:[0-9]*" | cut -d: -f2)
echo "Status connexion: $LOGIN_STATUS"

if [ "$LOGIN_STATUS" = "302" ]; then
    echo "‚úÖ Connexion r√©ussie"
    
    echo ""
    echo "üìã √âTAPE 3: V√©rification acc√®s profil GET"
    echo "========================================"
    
    PROFILE_GET_STATUS=$(curl -s -w "%{http_code}" http://localhost:3000/profile -b /tmp/cookies.txt -o /tmp/profile_get.txt)
    echo "Status GET Profile: $PROFILE_GET_STATUS"
    
    if [ "$PROFILE_GET_STATUS" = "200" ]; then
        echo "‚úÖ Acc√®s GET Profile fonctionnel"
        GET_SIZE=$(wc -c < /tmp/profile_get.txt)
        echo "Taille r√©ponse GET: $GET_SIZE bytes"
        
        echo ""
        echo "üìã √âTAPE 4: TEST POST PROFILE - S√©rie de tests"
        echo "============================================="
        
        # Test 1: Action updateProfile avec timeout court
        echo ""
        echo "üß™ Test 1: Action updateProfile (timeout 3s)"
        echo "--------------------------------------------"
        
        timeout 3 curl -s -w "HTTPSTATUS:%{http_code}" -X POST http://localhost:3000/profile \
          -b /tmp/cookies.txt \
          -d "_action=updateProfile&firstName=TestUpdate&lastName=UserUpdate&email=test2@example.com" \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -o /tmp/profile_update_test1.txt
        
        TEST1_EXIT_CODE=$?
        
        if [ $TEST1_EXIT_CODE -eq 124 ]; then
            echo "‚ùå TIMEOUT: Action updateProfile se bloque (>3s)"
            echo "üìù Statut: PROBL√àME CONFIRM√â"
        elif [ $TEST1_EXIT_CODE -eq 0 ]; then
            echo "‚úÖ Action updateProfile termin√©e dans les temps"
            if [ -f /tmp/profile_update_test1.txt ]; then
                UPDATE_SIZE=$(wc -c < /tmp/profile_update_test1.txt)
                echo "Taille r√©ponse: $UPDATE_SIZE bytes"
                echo "Contenu:"
                cat /tmp/profile_update_test1.txt | head -5
            fi
        else
            echo "‚ö†Ô∏è  Erreur curl (code: $TEST1_EXIT_CODE)"
        fi
        
        # Test 2: Action changePassword avec timeout court
        echo ""
        echo "üß™ Test 2: Action changePassword (timeout 3s)"
        echo "---------------------------------------------"
        
        timeout 3 curl -s -w "HTTPSTATUS:%{http_code}" -X POST http://localhost:3000/profile \
          -b /tmp/cookies.txt \
          -d "_action=changePassword&currentPassword=test123&newPassword=test123&confirmPassword=test123" \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -o /tmp/profile_password_test2.txt
        
        TEST2_EXIT_CODE=$?
        
        if [ $TEST2_EXIT_CODE -eq 124 ]; then
            echo "‚ùå TIMEOUT: Action changePassword se bloque (>3s)"
            echo "üìù Statut: PROBL√àME CONFIRM√â"
        elif [ $TEST2_EXIT_CODE -eq 0 ]; then
            echo "‚úÖ Action changePassword termin√©e dans les temps"
            if [ -f /tmp/profile_password_test2.txt ]; then
                PASS_SIZE=$(wc -c < /tmp/profile_password_test2.txt)
                echo "Taille r√©ponse: $PASS_SIZE bytes"
                echo "Contenu:"
                cat /tmp/profile_password_test2.txt | head -5
            fi
        else
            echo "‚ö†Ô∏è  Erreur curl (code: $TEST2_EXIT_CODE)"
        fi
        
        # Test 3: Action inconnue pour v√©rifier le handling
        echo ""
        echo "üß™ Test 3: Action inconnue (timeout 3s)"
        echo "---------------------------------------"
        
        timeout 3 curl -s -w "HTTPSTATUS:%{http_code}" -X POST http://localhost:3000/profile \
          -b /tmp/cookies.txt \
          -d "_action=unknownAction&test=value" \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -o /tmp/profile_unknown_test3.txt
        
        TEST3_EXIT_CODE=$?
        
        if [ $TEST3_EXIT_CODE -eq 124 ]; then
            echo "‚ùå TIMEOUT: M√™me les actions inconnues se bloquent"
            echo "üìù Statut: PROBL√àME G√âN√âRAL CONFIRM√â"
        elif [ $TEST3_EXIT_CODE -eq 0 ]; then
            echo "‚úÖ Action inconnue g√©r√©e correctement"
            if [ -f /tmp/profile_unknown_test3.txt ]; then
                UNKNOWN_SIZE=$(wc -c < /tmp/profile_unknown_test3.txt)
                echo "Taille r√©ponse: $UNKNOWN_SIZE bytes"
                echo "Contenu:"
                cat /tmp/profile_unknown_test3.txt | head -5
            fi
        else
            echo "‚ö†Ô∏è  Erreur curl (code: $TEST3_EXIT_CODE)"
        fi
        
        # Test 4: POST sans action pour v√©rifier la gestion
        echo ""
        echo "üß™ Test 4: POST sans action (timeout 3s)"
        echo "----------------------------------------"
        
        timeout 3 curl -s -w "HTTPSTATUS:%{http_code}" -X POST http://localhost:3000/profile \
          -b /tmp/cookies.txt \
          -d "firstName=Test&lastName=User" \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -o /tmp/profile_noaction_test4.txt
        
        TEST4_EXIT_CODE=$?
        
        if [ $TEST4_EXIT_CODE -eq 124 ]; then
            echo "‚ùå TIMEOUT: POST sans action se bloque aussi"
            echo "üìù Statut: PROBL√àME AU NIVEAU DE LA ROUTE"
        elif [ $TEST4_EXIT_CODE -eq 0 ]; then
            echo "‚úÖ POST sans action g√©r√© correctement"
            if [ -f /tmp/profile_noaction_test4.txt ]; then
                NOACTION_SIZE=$(wc -c < /tmp/profile_noaction_test4.txt)
                echo "Taille r√©ponse: $NOACTION_SIZE bytes"
                echo "Contenu:"
                cat /tmp/profile_noaction_test4.txt | head -5
            fi
        else
            echo "‚ö†Ô∏è  Erreur curl (code: $TEST4_EXIT_CODE)"
        fi
        
        echo ""
        echo "üìã √âTAPE 5: ANALYSE DES R√âSULTATS"
        echo "================================="
        
        TOTAL_TIMEOUTS=0
        TOTAL_SUCCESS=0
        
        [ $TEST1_EXIT_CODE -eq 124 ] && TOTAL_TIMEOUTS=$((TOTAL_TIMEOUTS + 1))
        [ $TEST2_EXIT_CODE -eq 124 ] && TOTAL_TIMEOUTS=$((TOTAL_TIMEOUTS + 1))
        [ $TEST3_EXIT_CODE -eq 124 ] && TOTAL_TIMEOUTS=$((TOTAL_TIMEOUTS + 1))
        [ $TEST4_EXIT_CODE -eq 124 ] && TOTAL_TIMEOUTS=$((TOTAL_TIMEOUTS + 1))
        
        [ $TEST1_EXIT_CODE -eq 0 ] && TOTAL_SUCCESS=$((TOTAL_SUCCESS + 1))
        [ $TEST2_EXIT_CODE -eq 0 ] && TOTAL_SUCCESS=$((TOTAL_SUCCESS + 1))
        [ $TEST3_EXIT_CODE -eq 0 ] && TOTAL_SUCCESS=$((TOTAL_SUCCESS + 1))
        [ $TEST4_EXIT_CODE -eq 0 ] && TOTAL_SUCCESS=$((TOTAL_SUCCESS + 1))
        
        echo "üìä R√©sultats des tests:"
        echo "   - Succ√®s: $TOTAL_SUCCESS/4"
        echo "   - Timeouts: $TOTAL_TIMEOUTS/4"
        echo "   - Autres: $((4 - TOTAL_SUCCESS - TOTAL_TIMEOUTS))/4"
        
        if [ $TOTAL_TIMEOUTS -gt 0 ]; then
            echo ""
            echo "‚ùå PROBL√àME CONFIRM√â: Actions POST Profile se bloquent"
            echo "üîç Analyse:"
            echo "   - GET Profile fonctionne normalement"
            echo "   - POST Profile cause des timeouts"
            echo "   - Probl√®me dans le code de l'action Remix"
            echo "   - Potentielle boucle infinie ou deadlock"
        else
            echo ""
            echo "‚úÖ PROBL√àME R√âSOLU: Toutes les actions POST fonctionnent"
            echo "üéâ Syst√®me enti√®rement op√©rationnel"
        fi
        
    else
        echo "‚ùå Probl√®me d'acc√®s GET Profile ($PROFILE_GET_STATUS)"
        echo "‚ö†Ô∏è  Impossible de continuer les tests POST"
    fi
    
else
    echo "‚ùå √âchec de connexion ($LOGIN_STATUS)"
    echo "‚ö†Ô∏è  Impossible de continuer les tests"
fi

echo ""
echo "üìã √âTAPE 6: R√âSUM√â FINAL"
echo "======================="
echo "Date: $(date)"
echo "Tests effectu√©s: 4 tests POST Profile"
echo "R√©sultat: $([ $TOTAL_TIMEOUTS -gt 0 ] && echo 'PROBL√àME CONFIRM√â' || echo 'PROBL√àME R√âSOLU')"
echo ""
echo "üéØ STATUT FINAL:"
if [ $TOTAL_TIMEOUTS -gt 0 ]; then
    echo "‚ùå ACTIONS POST PROFILE: PROBL√âMATIQUES (timeouts)"
    echo "‚úÖ Autres fonctionnalit√©s: Op√©rationnelles"
    echo "‚ö†Ô∏è  Investigation technique n√©cessaire"
else
    echo "‚úÖ ACTIONS POST PROFILE: FONCTIONNELLES"
    echo "‚úÖ Syst√®me complet: Op√©rationnel"
    echo "üéâ Pr√™t pour production"
fi

echo ""
echo "üîç TEST APPROFONDI TERMIN√â"
echo "=========================="
