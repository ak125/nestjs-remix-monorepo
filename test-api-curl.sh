#!/bin/bash

# =============================================================================
# üß™ TESTS COMPLETS POUR L'APPLICATION NESTJS-REMIX-MONOREPO
# =============================================================================

echo "üöÄ D√©marrage des tests avec curl..."
echo "======================================"

BASE_URL="http://localhost:3000"
SESSION_FILE="/tmp/session_cookies.txt"

# Fonction pour afficher les r√©sultats
show_result() {
    echo "üìä $1"
    echo "Status: $2"
    echo "Response: $3"
    echo "--------------------------------------"
}

# Nettoyer les cookies de session
rm -f $SESSION_FILE

echo ""
echo "üîß Test 1: V√©rification du serveur"
echo "=================================="
response=$(curl -s -o /dev/null -w "%{http_code}" $BASE_URL/)
show_result "Page d'accueil" "$response" "Doit retourner 200"

echo ""
echo "üë§ Test 2: Inscription d'un nouvel utilisateur"
echo "=============================================="
response=$(curl -s -w "%{http_code}" \
    -X POST \
    -H "Content-Type: application/x-www-form-urlencoded" \
    -d "email=test-curl@example.com&firstname=Test&lastname=Curl&password=testpass123" \
    -c $SESSION_FILE \
    $BASE_URL/auth/register)
show_result "Inscription" "$response" "Doit retourner 302 (redirection)"

echo ""
echo "üîê Test 3: Connexion avec les identifiants"
echo "=========================================="
response=$(curl -s -w "%{http_code}" \
    -X POST \
    -H "Content-Type: application/x-www-form-urlencoded" \
    -d "email=test@example.com&password=test123" \
    -c $SESSION_FILE \
    -b $SESSION_FILE \
    $BASE_URL/auth/login)
show_result "Connexion utilisateur existant" "$response" "Doit retourner 302 (redirection)"

echo ""
echo "üìù Test 4: Acc√®s au profil utilisateur (authentifi√©)"
echo "=================================================="
response=$(curl -s -w "%{http_code}" \
    -b $SESSION_FILE \
    $BASE_URL/profile)
show_result "Acc√®s profil" "$response" "Doit retourner 302 (redirection vers page profil)"

echo ""
echo "üîÑ Test 5: Mise √† jour du profil utilisateur"
echo "==========================================="
response=$(curl -s -w "%{http_code}" \
    -X POST \
    -H "Content-Type: application/x-www-form-urlencoded" \
    -d "firstName=TestModifi√©&lastName=CurlModifi√©&email=test@example.com&tel=0123456789" \
    -b $SESSION_FILE \
    $BASE_URL/profile/update)
show_result "Mise √† jour profil" "$response" "Doit retourner 302 (redirection)"

echo ""
echo "üîë Test 6: Changement de mot de passe"
echo "===================================="
response=$(curl -s -w "%{http_code}" \
    -X POST \
    -H "Content-Type: application/x-www-form-urlencoded" \
    -d "currentPassword=test123&newPassword=newpass123&confirmPassword=newpass123" \
    -b $SESSION_FILE \
    $BASE_URL/profile/change-password)
show_result "Changement mot de passe" "$response" "Doit retourner 302 (redirection)"

echo ""
echo "üí≠ Test 7: Demande de r√©initialisation de mot de passe"
echo "===================================================="
response=$(curl -s -w "%{http_code}" \
    -X POST \
    -H "Content-Type: application/x-www-form-urlencoded" \
    -d "email=test@example.com" \
    $BASE_URL/auth/forgot-password)
show_result "Mot de passe oubli√©" "$response" "Doit retourner 302 (redirection)"

echo ""
echo "üîç Test 8: Test avec token de r√©initialisation invalide"
echo "====================================================="
response=$(curl -s -w "%{http_code}" \
    -X POST \
    -H "Content-Type: application/x-www-form-urlencoded" \
    -d "password=newpassword123" \
    $BASE_URL/auth/reset-password/invalid-token)
show_result "Token invalide" "$response" "Doit retourner 302 (redirection avec erreur)"

echo ""
echo "üö™ Test 9: D√©connexion"
echo "====================="
response=$(curl -s -w "%{http_code}" \
    -X POST \
    -b $SESSION_FILE \
    $BASE_URL/auth/logout)
show_result "D√©connexion" "$response" "Doit retourner 302 (redirection)"

echo ""
echo "üîí Test 10: Acc√®s au profil sans authentification"
echo "================================================"
response=$(curl -s -w "%{http_code}" \
    $BASE_URL/profile)
show_result "Profil non authentifi√©" "$response" "Doit retourner 302 (redirection vers login)"

echo ""
echo "‚ùå Test 11: Connexion avec identifiants incorrects"
echo "================================================="
response=$(curl -s -w "%{http_code}" \
    -X POST \
    -H "Content-Type: application/x-www-form-urlencoded" \
    -d "email=wrong@example.com&password=wrongpass" \
    $BASE_URL/auth/login)
show_result "Identifiants incorrects" "$response" "Doit retourner 302 (redirection avec erreur)"

echo ""
echo "üîÑ Test 12: Multiples tentatives de connexion (brute force)"
echo "=========================================================="
for i in {1..3}; do
    response=$(curl -s -w "%{http_code}" \
        -X POST \
        -H "Content-Type: application/x-www-form-urlencoded" \
        -d "email=test@example.com&password=wrongpass" \
        $BASE_URL/auth/login)
    echo "Tentative $i: $response"
done

echo ""
echo "üìä Test 13: V√©rification des pages frontend"
echo "=========================================="

# Test des pages importantes
pages=(
    "/"
    "/login"
    "/register"
    "/forgot-password"
)

for page in "${pages[@]}"; do
    response=$(curl -s -o /dev/null -w "%{http_code}" $BASE_URL$page)
    show_result "Page $page" "$response" "Doit retourner 200"
done

echo ""
echo "üéØ Test 14: Test de l'API avec donn√©es JSON"
echo "=========================================="

# Test pour v√©rifier que l'API accepte les donn√©es JSON
response=$(curl -s -w "%{http_code}" \
    -X POST \
    -H "Content-Type: application/json" \
    -d '{"email":"test@example.com","password":"test123"}' \
    $BASE_URL/auth/login)
show_result "Login avec JSON" "$response" "Peut retourner 400 si non support√©"

echo ""
echo "üèÅ Test 15: Nettoyage et v√©rification finale"
echo "==========================================="

# Nettoyer le fichier de cookies
rm -f $SESSION_FILE

# Test final du serveur
response=$(curl -s -o /dev/null -w "%{http_code}" $BASE_URL/)
show_result "Serveur final" "$response" "Doit retourner 200"

echo ""
echo "‚úÖ TESTS TERMIN√âS!"
echo "=================="
echo "üìã R√©sum√© des tests effectu√©s:"
echo "1. ‚úì V√©rification serveur"
echo "2. ‚úì Inscription utilisateur"
echo "3. ‚úì Connexion utilisateur"
echo "4. ‚úì Acc√®s profil authentifi√©"
echo "5. ‚úì Mise √† jour profil"
echo "6. ‚úì Changement mot de passe"
echo "7. ‚úì Demande r√©initialisation"
echo "8. ‚úì Token invalide"
echo "9. ‚úì D√©connexion"
echo "10. ‚úì Acc√®s profil non authentifi√©"
echo "11. ‚úì Identifiants incorrects"
echo "12. ‚úì Protection brute force"
echo "13. ‚úì Pages frontend"
echo "14. ‚úì API JSON"
echo "15. ‚úì Nettoyage final"
echo ""
echo "üéâ Tous les tests sont termin√©s!"
