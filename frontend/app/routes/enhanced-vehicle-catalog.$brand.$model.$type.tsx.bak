import { 
  json, 
  type LoaderFunctionArgs, 
  type MetaFunction,
  type LinksFunction,
  type ErrorBoundaryComponent,
} from "@remix-run/node";
import { 
  useLoaderData, 
  useRouteError, 
  isRouteErrorResponse,
  useNavigation,
  useSearchParams,
  Link,
  useFetcher,
} from "@remix-run/react";
import { useEffect, useState } from "react";
import { z } from "zod";

// ========================================
// üé® COMPOSANTS UI OPTIMIS√âS
// ========================================
import { VehicleHeader } from "~/components/vehicle/VehicleHeader";
import { VehicleInfo } from "~/components/vehicle/VehicleInfo";
import { VehicleGallery } from "~/components/vehicle/VehicleGallery";
import { VehiclePartsGrid } from "~/components/vehicle/VehiclePartsGrid";
import { VehicleAnalytics } from "~/components/vehicle/VehicleAnalytics";
import { ErrorBoundary } from "~/components/ui/ErrorBoundary";
import { LoadingSpinner } from "~/components/ui/LoadingSpinner";
import { SEOHelmet } from "~/components/ui/SEOHelmet";

// ========================================
// üöÄ SERVICES API MODERNIS√âS
// ========================================
import { enhancedVehicleApi } from "~/services/api/enhanced-vehicle.api";
import { enhancedVehicleCatalogApi } from "~/services/api/enhanced-vehicle-catalog.api";

// ========================================
// üîç VALIDATION ET TYPES
// ========================================

const ParamsSchema = z.object({
  brand: z.string().min(1, "Brand slug est obligatoire"),
  model: z.string().min(1, "Model slug est obligatoire"), 
  type: z.string().min(1, "Type slug est obligatoire"),
});

type LoaderData = {
  vehicle: VehicleWithRelations;
  categories: CategoryWithSubcategories[];
  breadcrumbs: BreadcrumbItem[];
  metadata: VehicleMetadata;
  popularParts: PopularPart[];
  analytics: CatalogAnalytics;
  performance: {
    loadTime: number;
    cacheHit: boolean;
    timestamp: string;
  };
};

interface VehicleWithRelations {
  id: number;
  name: string;
  slug: string;
  power_hp?: number;
  power_kw?: number;
  fuel?: string;
  yearFrom?: number;
  yearTo?: number;
  model: {
    id: number;
    name: string;
    slug: string;
    brand: {
      id: number;
      name: string;
      code: string;
      slug: string;
    };
  };
}

interface CategoryWithSubcategories {
  id: number;
  name: string;
  slug: string;
  description?: string;
  imageUrl?: string;
  subcategories: Array<{
    id: number;
    name: string;
    slug: string;
    partsCount?: number;
  }>;
}

interface BreadcrumbItem {
  label: string;
  path: string;
  position: number;
}

interface VehicleMetadata {
  title: string;
  description: string;
  keywords: string[];
  ogTitle: string;
  ogDescription: string;
  ogImage?: string;
  canonicalUrl: string;
  schemaMarkup: Record<string, any>;
}

interface PopularPart {
  id: number;
  name: string;
  slug: string;
  price?: number;
  brand?: string;
  imageUrl?: string;
}

interface CatalogAnalytics {
  vehicleViews: number;
  popularCategories: string[];
  recommendedParts: number;
  conversionRate: number;
}

// ========================================
// üîó LIENS CSS ET PRELOAD
// ========================================

export const links: LinksFunction = () => [
  // Preload des images critiques
  {
    rel: "preload",
    as: "image",
    href: "/images/vehicle-placeholder.webp",
  },
  // CSS sp√©cifique √† la page
  {
    rel: "stylesheet",
    href: "/styles/vehicle-catalog.css",
  },
];

// ========================================
// ‚ö° LOADER FUNCTION OPTIMIS√â
// ========================================

export async function loader({ params, request }: LoaderFunctionArgs) {
  const startTime = Date.now();
  
  try {
    // 1. üîç Validation stricte des param√®tres
    const validatedParams = ParamsSchema.parse(params);
    const { brand, model, type } = validatedParams;

    // 2. üìä Headers et cache
    const url = new URL(request.url);
    const userAgent = request.headers.get("user-agent") || "";
    const isMobile = /Mobile|Android|iPhone|iPad/.test(userAgent);
    
    // 3. üöÄ R√©cup√©ration parall√®le des donn√©es
    const [catalogResponse, popularPartsResponse] = await Promise.allSettled([
      enhancedVehicleCatalogApi.getVehicleCatalog(brand, model, type),
      enhancedVehicleCatalogApi.getPopularParts(brand, model, type, { limit: 12 }),
    ]);

    // 4. üõ°Ô∏è V√©rification des r√©sultats
    if (catalogResponse.status === "rejected") {
      console.error("Erreur r√©cup√©ration catalogue:", catalogResponse.reason);
      throw new Response("V√©hicule non trouv√©", { 
        status: 404,
        statusText: "Vehicle Not Found" 
      });
    }

    const catalogData = catalogResponse.value;
    const popularParts = popularPartsResponse.status === "fulfilled" 
      ? popularPartsResponse.value 
      : [];

    // 5. üìà M√©triques de performance
    const loadTime = Date.now() - startTime;
    const performance = {
      loadTime,
      cacheHit: catalogData.analytics?.cacheStatus?.vehicle || false,
      timestamp: new Date().toISOString(),
    };

    // 6. üîÑ Construction de la r√©ponse optimis√©e
    const responseData: LoaderData = {
      vehicle: catalogData.vehicle,
      categories: catalogData.categories,
      breadcrumbs: catalogData.breadcrumbs,
      metadata: catalogData.metadata,
      popularParts,
      analytics: catalogData.analytics,
      performance,
    };

    // 7. üì§ R√©ponse avec headers optimis√©s
    return json(responseData, {
      headers: {
        "Cache-Control": "public, max-age=300, s-maxage=3600", // 5min client, 1h CDN
        "Vary": "Accept-Encoding, User-Agent",
        "X-Load-Time": `${loadTime}ms`,
        "X-Cache-Hit": catalogData.analytics?.cacheStatus?.vehicle ? "true" : "false",
      },
    });

  } catch (error) {
    // üõ°Ô∏è Gestion d'erreurs structur√©e
    if (error instanceof z.ZodError) {
      console.error("Erreur validation param√®tres:", error.errors);
      throw new Response("Param√®tres de route invalides", { 
        status: 400,
        statusText: "Bad Request" 
      });
    }

    if (error instanceof Response) {
      throw error; // Re-throw les erreurs HTTP
    }

    console.error("Erreur loader vehicle catalog:", error);
    throw new Response("Erreur interne du serveur", { 
      status: 500,
      statusText: "Internal Server Error" 
    });
  }
}

// ========================================
// üéØ META FUNCTION SEO OPTIMIS√âE
// ========================================

export const meta: MetaFunction<typeof loader> = ({ data, params, location }) => {
  // Gestion du cas d'erreur
  if (!data) {
    return [
      { title: "V√©hicule non trouv√© - Automecanik" },
      { name: "description", content: "Le v√©hicule demand√© n'a pas √©t√© trouv√© dans notre catalogue." },
      { name: "robots", content: "noindex, nofollow" },
    ];
  }

  const { metadata, vehicle, analytics } = data;
  const { brand, model, type } = params as { brand: string; model: string; type: string };

  // Construction dynamique des m√©ta
  const vehicleName = `${vehicle.model.brand.name} ${vehicle.model.name} ${vehicle.name}`;
  const power = vehicle.power_hp ? `${vehicle.power_hp} ch` : "";
  
  return [
    // ‚úÖ Titre optimis√© SEO
    { 
      title: metadata.title || `Pi√®ces ${vehicleName} ${power} - Automecanik` 
    },
    
    // ‚úÖ Description enrichie
    { 
      name: "description", 
      content: metadata.description || `Catalogue complet de pi√®ces d√©tach√©es pour ${vehicleName}. ${analytics.recommendedParts} pi√®ces disponibles, livraison rapide, garantie constructeur.` 
    },
    
    // ‚úÖ Mots-cl√©s contextualis√©s
    { 
      name: "keywords", 
      content: [
        ...metadata.keywords,
        vehicle.model.brand.name,
        vehicle.model.name,
        vehicle.name,
        "pi√®ces d√©tach√©es",
        "automobile",
        "garage"
      ].join(", ") 
    },

    // ‚úÖ Open Graph optimis√©
    { property: "og:title", content: metadata.ogTitle },
    { property: "og:description", content: metadata.ogDescription },
    { property: "og:type", content: "product.group" },
    { property: "og:url", content: `https://automecanik.com${location.pathname}` },
    { property: "og:image", content: metadata.ogImage || `/images/vehicles/${brand}/${model}.jpg` },
    { property: "og:image:alt", content: `Pi√®ces d√©tach√©es ${vehicleName}` },
    { property: "og:site_name", content: "Automecanik" },

    // ‚úÖ Twitter Card
    { name: "twitter:card", content: "summary_large_image" },
    { name: "twitter:title", content: metadata.ogTitle },
    { name: "twitter:description", content: metadata.ogDescription },
    { name: "twitter:image", content: metadata.ogImage },

    // ‚úÖ Donn√©es structur√©es produit
    { name: "product:brand", content: vehicle.model.brand.name },
    { name: "product:category", content: "Pi√®ces automobiles" },
    { name: "product:availability", content: "in stock" },

    // ‚úÖ URL canonique
    { tagName: "link", rel: "canonical", href: metadata.canonicalUrl },

    // ‚úÖ Hreflang pour l'international (si applicable)
    { tagName: "link", rel: "alternate", hrefLang: "fr", href: metadata.canonicalUrl },

    // ‚úÖ Robots et indexation
    { name: "robots", content: "index, follow, max-image-preview:large" },
    { name: "googlebot", content: "index, follow" },
  ];
};

// ========================================
// üõ°Ô∏è ERROR BOUNDARY ROBUSTE
// ========================================

export const ErrorBoundary: ErrorBoundaryComponent = () => {
  const error = useRouteError();

  // Gestion des erreurs HTTP sp√©cifiques
  if (isRouteErrorResponse(error)) {
    switch (error.status) {
      case 404:
        return (
          <div className="min-h-screen flex items-center justify-center bg-gray-50">
            <div className="text-center">
              <h1 className="text-4xl font-bold text-gray-900 mb-4">
                V√©hicule non trouv√©
              </h1>
              <p className="text-lg text-gray-600 mb-8">
                Le v√©hicule demand√© n'existe pas dans notre catalogue.
              </p>
              <div className="space-x-4">
                <Link 
                  to="/constructeurs" 
                  className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700"
                >
                  Voir tous les constructeurs
                </Link>
                <Link 
                  to="/" 
                  className="bg-gray-600 text-white px-6 py-3 rounded-lg hover:bg-gray-700"
                >
                  Retour √† l'accueil
                </Link>
              </div>
            </div>
          </div>
        );

      case 400:
        return (
          <div className="min-h-screen flex items-center justify-center bg-gray-50">
            <div className="text-center">
              <h1 className="text-4xl font-bold text-red-600 mb-4">
                Param√®tres invalides
              </h1>
              <p className="text-lg text-gray-600 mb-8">
                Les param√®tres de la page sont incorrects.
              </p>
              <Link 
                to="/" 
                className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700"
              >
                Retour √† l'accueil
              </Link>
            </div>
          </div>
        );

      default:
        return (
          <div className="min-h-screen flex items-center justify-center bg-gray-50">
            <div className="text-center">
              <h1 className="text-4xl font-bold text-red-600 mb-4">
                Erreur {error.status}
              </h1>
              <p className="text-lg text-gray-600 mb-8">
                {error.statusText || "Une erreur inattendue s'est produite"}
              </p>
              <Link 
                to="/" 
                className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700"
              >
                Retour √† l'accueil
              </Link>
            </div>
          </div>
        );
    }
  }

  // Erreur JavaScript non g√©r√©e
  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-50">
      <div className="text-center max-w-md">
        <h1 className="text-4xl font-bold text-red-600 mb-4">
          Erreur inattendue
        </h1>
        <p className="text-lg text-gray-600 mb-8">
          Une erreur technique s'est produite. Nos √©quipes ont √©t√© notifi√©es.
        </p>
        <div className="bg-red-50 border border-red-200 rounded-lg p-4 mb-8">
          <p className="text-sm text-red-700 font-mono">
            {error instanceof Error ? error.message : "Erreur inconnue"}
          </p>
        </div>
        <Link 
          to="/" 
          className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700"
        >
          Retour √† l'accueil
        </Link>
      </div>
    </div>
  );
};

// ========================================
// üé® COMPOSANT PRINCIPAL OPTIMIS√â
// ========================================

export default function EnhancedVehicleCatalogPage() {
  const data = useLoaderData<typeof loader>();
  const navigation = useNavigation();
  const [searchParams] = useSearchParams();
  const fetcher = useFetcher();
  
  // üìä √âtats locaux pour l'interactivit√©
  const [selectedCategory, setSelectedCategory] = useState<string | null>(
    searchParams.get("category")
  );
  const [viewMode, setViewMode] = useState<"grid" | "list">("grid");
  const [analyticsTracked, setAnalyticsTracked] = useState(false);

  const { 
    vehicle, 
    categories, 
    breadcrumbs, 
    metadata, 
    popularParts, 
    analytics,
    performance 
  } = data;

  // üìà Tracking analytics automatique
  useEffect(() => {
    if (!analyticsTracked && typeof window !== "undefined") {
      // Tracking vue de page (exemple avec GA ou autre)
      if (window.gtag) {
        window.gtag("event", "page_view", {
          page_title: metadata.title,
          page_location: window.location.href,
          vehicle_brand: vehicle.model.brand.name,
          vehicle_model: vehicle.model.name,
          vehicle_type: vehicle.name,
          load_time: performance.loadTime,
          cache_hit: performance.cacheHit,
        });
      }
      setAnalyticsTracked(true);
    }
  }, [metadata.title, vehicle, performance, analyticsTracked]);

  // üîÑ Loading state pendant navigation
  const isLoading = navigation.state === "loading";

  return (
    <>
      {/* üéØ JSON-LD Schema.org pour SEO */}
      <SEOJsonLd data={metadata.schemaMarkup} />

      {/* üîÑ Loading overlay */}
      {isLoading && (
        <div className="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center">
          <LoadingSpinner size="large" />
        </div>
      )}

      {/* üè∑Ô∏è Banni√®re avec s√©lecteur v√©hicule */}
      <section className="container-fluid containerBanner" aria-label="En-t√™te v√©hicule">
        <div className="container-fluid mymaxwidth">
          <div className="row d-flex flex-row-reverse">
            {/* Informations v√©hicule */}
            <div className="col-12 col-sm align-self-center">
              <VehicleHeader 
                vehicle={vehicle} 
                analytics={analytics}
                performance={performance}
              />
              <Breadcrumb 
                items={breadcrumbs}
                schema={true} // Active le Schema.org BreadcrumbList
              />
            </div>
            
            {/* S√©lecteur v√©hicule alternatif */}
            <div className="col-12 col-sm containerSeekCarBox">
              <VehicleSelector 
                currentVehicle={vehicle}
                onVehicleChange={(newVehicle) => {
                  // Analytics tracking du changement
                  if (window.gtag) {
                    window.gtag("event", "vehicle_change", {
                      from_vehicle: `${vehicle.model.brand.name} ${vehicle.model.name} ${vehicle.name}`,
                      to_vehicle: `${newVehicle.brand} ${newVehicle.model} ${newVehicle.type}`,
                    });
                  }
                }}
              />
            </div>
          </div>
        </div>
      </section>

      {/* üìä M√©tadonn√©es performance (dev uniquement) */}
      {process.env.NODE_ENV === "development" && (
        <div className="bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-4">
          <div className="flex">
            <div className="ml-3">
              <p className="text-sm text-yellow-700">
                <strong>Performance:</strong> {performance.loadTime}ms 
                {performance.cacheHit && " (Cache Hit)"}
                | <strong>Parts:</strong> {analytics.recommendedParts}
                | <strong>Categories:</strong> {categories.length}
              </p>
            </div>
          </div>
        </div>
      )}

      {/* üóÇÔ∏è Catalogue de pi√®ces principal */}
      <section className="container-fluid containercatalogPage" aria-label="Catalogue de pi√®ces">
        <div className="container-fluid mymaxwidth">
          <div className="row">
            {/* En-t√™te du catalogue */}
            <div className="col-12">
              <div className="d-flex justify-content-between align-items-center mb-4">
                <div>
                  <h1 className="h2 mb-1">
                    Catalogue {vehicle.model.brand.name} {vehicle.model.name} {vehicle.name}
                    {vehicle.power_hp && ` ${vehicle.power_hp} ch`}
                  </h1>
                  <p className="text-muted mb-0">
                    {analytics.recommendedParts} pi√®ces disponibles ‚Ä¢ {categories.length} cat√©gories
                  </p>
                </div>
                
                {/* Contr√¥les d'affichage */}
                <div className="btn-group" role="group" aria-label="Mode d'affichage">
                  <button
                    type="button"
                    className={`btn ${viewMode === "grid" ? "btn-primary" : "btn-outline-primary"}`}
                    onClick={() => setViewMode("grid")}
                    aria-pressed={viewMode === "grid"}
                  >
                    Grille
                  </button>
                  <button
                    type="button"
                    className={`btn ${viewMode === "list" ? "btn-primary" : "btn-outline-primary"}`}
                    onClick={() => setViewMode("list")}
                    aria-pressed={viewMode === "list"}
                  >
                    Liste
                  </button>
                </div>
              </div>
              <div className="divh2"></div>
            </div>

            {/* Grille des cat√©gories */}
            <CategoryGrid 
              categories={categories}
              vehicle={vehicle}
              viewMode={viewMode}
              selectedCategory={selectedCategory}
              onCategorySelect={setSelectedCategory}
              onCategoryClick={(category) => {
                // Analytics tracking
                if (window.gtag) {
                  window.gtag("event", "category_click", {
                    category_name: category.name,
                    vehicle_brand: vehicle.model.brand.name,
                    position: categories.findIndex(c => c.id === category.id) + 1,
                  });
                }
              }}
            />
          </div>
        </div>
      </section>

      {/* üî• Pi√®ces populaires */}
      <section className="container-fluid containergrayPage" aria-label="Pi√®ces populaires">
        <div className="container-fluid mymaxwidth">
          <div className="row">
            <div className="col-12">
              <h2 className="text-uppercase">
                Catalogue pi√®ces auto {vehicle.model.brand.name} les plus vendues
              </h2>
              <p className="text-muted mb-4">
                S√©lection des {popularParts.length} pi√®ces les plus demand√©es pour votre v√©hicule
              </p>
              <div className="divh2"></div>
            </div>
            
            <div className="col-12">
              <PopularParts 
                parts={popularParts}
                vehicle={vehicle}
                onPartClick={(part) => {
                  // Analytics tracking
                  if (window.gtag) {
                    window.gtag("event", "popular_part_click", {
                      part_name: part.name,
                      part_id: part.id,
                      vehicle_brand: vehicle.model.brand.name,
                      position: popularParts.findIndex(p => p.id === part.id) + 1,
                    });
                  }
                }}
              />
            </div>
          </div>
        </div>
      </section>

      {/* üîç Suggestions et liens connexes */}
      <section className="container-fluid" aria-label="Suggestions">
        <div className="container-fluid mymaxwidth">
          <div className="row">
            <div className="col-12">
              <div className="bg-light p-4 rounded">
                <h3 className="h5 mb-3">V√©hicules similaires</h3>
                <div className="row">
                  {/* Suggestions bas√©es sur la marque/mod√®le */}
                  <div className="col-md-4">
                    <Link 
                      to={`/constructeurs/${vehicle.model.brand.code.toLowerCase()}`}
                      className="d-block p-3 border rounded bg-white text-decoration-none hover-shadow"
                    >
                      <strong>Tous les {vehicle.model.brand.name}</strong>
                      <br />
                      <small className="text-muted">Explorer toute la gamme</small>
                    </Link>
                  </div>
                  
                  <div className="col-md-4">
                    <Link 
                      to={`/pieces/${vehicle.model.brand.code.toLowerCase()}/${vehicle.model.name.toLowerCase()}`}
                      className="d-block p-3 border rounded bg-white text-decoration-none hover-shadow"
                    >
                      <strong>{vehicle.model.brand.name} {vehicle.model.name}</strong>
                      <br />
                      <small className="text-muted">Autres motorisations</small>
                    </Link>
                  </div>
                  
                  <div className="col-md-4">
                    <Link 
                      to="/pieces"
                      className="d-block p-3 border rounded bg-white text-decoration-none hover-shadow"
                    >
                      <strong>Catalogue complet</strong>
                      <br />
                      <small className="text-muted">Toutes marques confondues</small>
                    </Link>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </>
  );
}